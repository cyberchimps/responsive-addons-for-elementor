gsap.utils.toArray(".rael-stacking-card").forEach((card,index,cards)=>{const baseX=parseFloat(card.dataset.translateX)||0;const baseY=parseFloat(card.dataset.translateY)||0;const baseRotate=parseFloat(card.dataset.rotate)||0;console.log("baseRotate=="+baseRotate);const scrollRotate=parseFloat(card.dataset.scrollrotate)||0;console.log("scrollRotate=="+scrollRotate);const baseScale=parseFloat(card.dataset.scale)||1;console.log("baseScale=="+baseScale);const baseBlur=parseFloat(card.dataset.blur)||0;const baseGreyscale=parseFloat(card.dataset.greyscale)||0;console.log("baseGreyscale=="+baseGreyscale);const scrollGreyscale=parseFloat(card.dataset.scrollgreyscale)||0;console.log("scrollGreyscale=="+scrollGreyscale);if(index===cards.length-1)return;ScrollTrigger.create({trigger:card,start:"bottom top",onEnter:()=>{gsap.to(card,{x:baseX+index*5,y:baseY+index*10,rotate:scrollRotate,scale:baseScale,filter:`blur(${baseBlur}px) grayscale(${scrollGreyscale}%)`,opacity:1,overwrite:"auto",duration:0.4,ease:"power2.out",})},onLeaveBack:()=>{gsap.to(card,{x:baseX,y:baseY,rotate:baseRotate,scale:baseScale,filter:`blur(0px) grayscale(${baseGreyscale}%)`,opacity:1,overwrite:"auto",duration:0.4,ease:"power2.out",})},})})